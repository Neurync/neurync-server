generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(uuid())
  name            String
  about           String?
  email           String   @unique
  password        String
  neurodivergence String?
  createdAt       DateTime @default(now()) @map("created_at")

  AlertMessages                  AlertMessage[]
  NonverbalMessages              NonverbalMessage[]
  Dangers                        Danger[]
  Helps                          Help[]
  UserHasDefaultNonverbalMessage UserHasDefaultNonverbalMessage[]

  @@map("users")
}

model AlertMessage {
  id           String  @id @default(uuid())
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @map("user_id")
  content      String
  is_favorited Boolean @default(false)

  @@map("alert_messages")
}

enum NonverbalMessageType {
  feelings
  problems
}

model NonverbalMessage {
  id           String               @id @default(uuid())
  content      String
  user         User                 @relation(fields: [userId], references: [id])
  userId       String               @map("user_id")
  emoji_icon   String
  type         NonverbalMessageType
  is_favorited Boolean              @default(false)

  @@map("nonverbal_messages")
}

model DefaultonverbalMessage {
  id                             String                           @id @default(uuid())
  content                        String
  emoji_icon                     String
  type                           NonverbalMessageType
  UserHasDefaultNonverbalMessage UserHasDefaultNonverbalMessage[]

  @@map("default_nonverbal_messages")
}

model UserHasDefaultNonverbalMessage {
  id                        String                 @id @default(uuid())
  user                      User                   @relation(fields: [userId], references: [id])
  userId                    String                 @map("user_id")
  defaultNonverbalMessage   DefaultonverbalMessage @relation(fields: [defaultNonverbalMessageId], references: [id])
  defaultNonverbalMessageId String                 @map("default_nonverbal_message_id")
  userHas                   Boolean                @default(true) @map("user_has")
  isFavorited               Boolean                @default(false) @map("is_favorited")

  @@map("user_has_default_nonverbal_messages")
}

model Danger {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")
  about  String

  @@map("dangers")
}

model Help {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")
  about  String

  @@map("helps")
}
